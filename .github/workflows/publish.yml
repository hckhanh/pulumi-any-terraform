name: Publish

on:
  workflow_dispatch:
  release:
    types:
      - published
      - prereleased

env:
  NX_KEY: ${{ secrets.NX_KEY }}
  AWS_ENDPOINT_URL: ${{ secrets.AWS_ENDPOINT_URL }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

permissions:
  contents: read

jobs:
  npm-packages:
    name: NPM Packages
    if: ${{ github.actor != 'renovate[bot]' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          filter: tree:0
      - name: Setup pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
      - name: Setup Node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version-file: 'package.json'
          registry-url: https://registry.npmjs.org/
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Show Nx report
        run: pnpm nx report
      - name: Build packages
        run: pnpm  nx run-many -t build
      - name: Publish packages
        run: pnpm nx release publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_PROVENANCE: true
