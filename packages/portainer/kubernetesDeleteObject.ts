// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class KubernetesDeleteObject extends pulumi.CustomResource {
    /**
     * Get an existing KubernetesDeleteObject resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: KubernetesDeleteObjectState, opts?: pulumi.CustomResourceOptions): KubernetesDeleteObject {
        return new KubernetesDeleteObject(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'portainer:index/kubernetesDeleteObject:KubernetesDeleteObject';

    /**
     * Returns true if the given object is an instance of KubernetesDeleteObject.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is KubernetesDeleteObject {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === KubernetesDeleteObject.__pulumiType;
    }

    declare public readonly environmentId: pulumi.Output<number>;
    declare public readonly kubernetesDeleteObjectId: pulumi.Output<string>;
    declare public readonly names: pulumi.Output<string[]>;
    declare public readonly namespace: pulumi.Output<string>;
    declare public readonly resourceType: pulumi.Output<string>;

    /**
     * Create a KubernetesDeleteObject resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: KubernetesDeleteObjectArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: KubernetesDeleteObjectArgs | KubernetesDeleteObjectState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as KubernetesDeleteObjectState | undefined;
            resourceInputs["environmentId"] = state?.environmentId;
            resourceInputs["kubernetesDeleteObjectId"] = state?.kubernetesDeleteObjectId;
            resourceInputs["names"] = state?.names;
            resourceInputs["namespace"] = state?.namespace;
            resourceInputs["resourceType"] = state?.resourceType;
        } else {
            const args = argsOrState as KubernetesDeleteObjectArgs | undefined;
            if (args?.environmentId === undefined && !opts.urn) {
                throw new Error("Missing required property 'environmentId'");
            }
            if (args?.names === undefined && !opts.urn) {
                throw new Error("Missing required property 'names'");
            }
            if (args?.namespace === undefined && !opts.urn) {
                throw new Error("Missing required property 'namespace'");
            }
            if (args?.resourceType === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceType'");
            }
            resourceInputs["environmentId"] = args?.environmentId;
            resourceInputs["kubernetesDeleteObjectId"] = args?.kubernetesDeleteObjectId;
            resourceInputs["names"] = args?.names;
            resourceInputs["namespace"] = args?.namespace;
            resourceInputs["resourceType"] = args?.resourceType;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(KubernetesDeleteObject.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering KubernetesDeleteObject resources.
 */
export interface KubernetesDeleteObjectState {
    environmentId?: pulumi.Input<number>;
    kubernetesDeleteObjectId?: pulumi.Input<string>;
    names?: pulumi.Input<pulumi.Input<string>[]>;
    namespace?: pulumi.Input<string>;
    resourceType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a KubernetesDeleteObject resource.
 */
export interface KubernetesDeleteObjectArgs {
    environmentId: pulumi.Input<number>;
    kubernetesDeleteObjectId?: pulumi.Input<string>;
    names: pulumi.Input<pulumi.Input<string>[]>;
    namespace: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
}
