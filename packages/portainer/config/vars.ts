// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

declare var exports: any;
const __config = new pulumi.Config("portainer");

/**
 * API key to authenticate with Portainer. Mutually exclusive with 'user' and 'password'.
 */
export declare const apiKey: string | undefined;
Object.defineProperty(exports, "apiKey", {
    get() {
        return __config.get("apiKey");
    },
    enumerable: true,
});

/**
 * Password for authentication. Must be used together with 'user'.
 */
export declare const apiPassword: string | undefined;
Object.defineProperty(exports, "apiPassword", {
    get() {
        return __config.get("apiPassword");
    },
    enumerable: true,
});

/**
 * Username for authentication. Must be used together with 'password'.
 */
export declare const apiUser: string | undefined;
Object.defineProperty(exports, "apiUser", {
    get() {
        return __config.get("apiUser");
    },
    enumerable: true,
});

/**
 * URL of the Portainer instance (e.g. https://portainer.example.com). '/api' will be appended automatically if missing.
 */
export declare const endpoint: string | undefined;
Object.defineProperty(exports, "endpoint", {
    get() {
        return __config.get("endpoint");
    },
    enumerable: true,
});

/**
 * Verify the SSL/TLS certificate for the Portainer endpoint
 */
export declare const skipSslVerify: boolean | undefined;
Object.defineProperty(exports, "skipSslVerify", {
    get() {
        return __config.getObject<boolean>("skipSslVerify");
    },
    enumerable: true,
});

