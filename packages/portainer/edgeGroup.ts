// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class EdgeGroup extends pulumi.CustomResource {
    /**
     * Get an existing EdgeGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EdgeGroupState, opts?: pulumi.CustomResourceOptions): EdgeGroup {
        return new EdgeGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'portainer:index/edgeGroup:EdgeGroup';

    /**
     * Returns true if the given object is an instance of EdgeGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EdgeGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EdgeGroup.__pulumiType;
    }

    declare public readonly dynamic: pulumi.Output<boolean>;
    declare public readonly edgeGroupId: pulumi.Output<string>;
    declare public readonly endpoints: pulumi.Output<number[] | undefined>;
    declare public readonly name: pulumi.Output<string>;
    declare public readonly partialMatch: pulumi.Output<boolean | undefined>;
    declare public readonly tagIds: pulumi.Output<number[] | undefined>;

    /**
     * Create a EdgeGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EdgeGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EdgeGroupArgs | EdgeGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EdgeGroupState | undefined;
            resourceInputs["dynamic"] = state?.dynamic;
            resourceInputs["edgeGroupId"] = state?.edgeGroupId;
            resourceInputs["endpoints"] = state?.endpoints;
            resourceInputs["name"] = state?.name;
            resourceInputs["partialMatch"] = state?.partialMatch;
            resourceInputs["tagIds"] = state?.tagIds;
        } else {
            const args = argsOrState as EdgeGroupArgs | undefined;
            if (args?.dynamic === undefined && !opts.urn) {
                throw new Error("Missing required property 'dynamic'");
            }
            resourceInputs["dynamic"] = args?.dynamic;
            resourceInputs["edgeGroupId"] = args?.edgeGroupId;
            resourceInputs["endpoints"] = args?.endpoints;
            resourceInputs["name"] = args?.name;
            resourceInputs["partialMatch"] = args?.partialMatch;
            resourceInputs["tagIds"] = args?.tagIds;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EdgeGroup.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering EdgeGroup resources.
 */
export interface EdgeGroupState {
    dynamic?: pulumi.Input<boolean>;
    edgeGroupId?: pulumi.Input<string>;
    endpoints?: pulumi.Input<pulumi.Input<number>[]>;
    name?: pulumi.Input<string>;
    partialMatch?: pulumi.Input<boolean>;
    tagIds?: pulumi.Input<pulumi.Input<number>[]>;
}

/**
 * The set of arguments for constructing a EdgeGroup resource.
 */
export interface EdgeGroupArgs {
    dynamic: pulumi.Input<boolean>;
    edgeGroupId?: pulumi.Input<string>;
    endpoints?: pulumi.Input<pulumi.Input<number>[]>;
    name?: pulumi.Input<string>;
    partialMatch?: pulumi.Input<boolean>;
    tagIds?: pulumi.Input<pulumi.Input<number>[]>;
}
