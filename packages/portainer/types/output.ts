// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface DockerNetworkIpamConfig {
    auxiliaryAddresses?: {[key: string]: string};
    gateway?: string;
    ipRange?: string;
    subnet: string;
}

export interface DockerPluginSetting {
    description?: string;
    name: string;
    values: string[];
}

export interface DockerVolumeClusterVolumeSpec {
    accessMode?: outputs.DockerVolumeClusterVolumeSpecAccessMode;
    accessibilityRequirements?: outputs.DockerVolumeClusterVolumeSpecAccessibilityRequirements;
    availability?: string;
    capacityRange?: outputs.DockerVolumeClusterVolumeSpecCapacityRange;
    group?: string;
    secrets?: outputs.DockerVolumeClusterVolumeSpecSecret[];
}

export interface DockerVolumeClusterVolumeSpecAccessMode {
    mountVolume?: {[key: string]: string};
    scope?: string;
    sharing?: string;
}

export interface DockerVolumeClusterVolumeSpecAccessibilityRequirements {
    preferreds?: outputs.DockerVolumeClusterVolumeSpecAccessibilityRequirementsPreferred[];
    requisites?: outputs.DockerVolumeClusterVolumeSpecAccessibilityRequirementsRequisite[];
}

export interface DockerVolumeClusterVolumeSpecAccessibilityRequirementsPreferred {
    property1?: string;
    property2?: string;
}

export interface DockerVolumeClusterVolumeSpecAccessibilityRequirementsRequisite {
    property1?: string;
    property2?: string;
}

export interface DockerVolumeClusterVolumeSpecCapacityRange {
    limitBytes?: number;
    requiredBytes?: number;
}

export interface DockerVolumeClusterVolumeSpecSecret {
    key: string;
    secret: string;
}

export interface EndpointSettingsChangeWindow {
    enabled?: boolean;
    endTime?: string;
    startTime?: string;
}

export interface EndpointSettingsDeploymentOptions {
    hideAddWithForm?: boolean;
    hideFileUpload?: boolean;
    hideWebEditor?: boolean;
    overrideGlobalOptions?: boolean;
}

export interface EndpointSettingsGpus {
    name: string;
    value: string;
}

export interface EndpointSettingsSecuritySettings {
    allowBindMounts?: boolean;
    allowContainerCapabilities?: boolean;
    allowDeviceMapping?: boolean;
    allowHostNamespace?: boolean;
    allowPrivilegedMode?: boolean;
    allowStackManagement?: boolean;
    allowSysctlSetting?: boolean;
    allowVolumeBrowser?: boolean;
    enableHostManagement?: boolean;
}

export interface KubernetesIngresscontrollersController {
    availability: boolean;
    className: string;
    name: string;
    new: boolean;
    type: string;
    used: boolean;
}

export interface KubernetesIngressesPath {
    host: string;
    path: string;
    pathType: string;
    port: number;
    serviceName: string;
}

export interface KubernetesIngressesTl {
    hosts?: string[];
    secretName?: string;
}

export interface KubernetesNamespaceIngresscontrollersController {
    availability: boolean;
    className: string;
    name: string;
    new: boolean;
    type: string;
    used: boolean;
}

export interface SettingsBlackListedLabel {
    name: string;
    value: string;
}

export interface SettingsGlobalDeploymentOptions {
    hideStacksFunctionality: boolean;
}

export interface SettingsInternalAuthSettings {
    requiredPasswordLength: number;
}

export interface SettingsLdapSettings {
    anonymousMode: boolean;
    autoCreateUsers: boolean;
    groupSearchSettings?: outputs.SettingsLdapSettingsGroupSearchSetting[];
    password: string;
    readerDn: string;
    searchSettings?: outputs.SettingsLdapSettingsSearchSetting[];
    startTls: boolean;
    tlsConfig?: outputs.SettingsLdapSettingsTlsConfig;
    url: string;
}

export interface SettingsLdapSettingsGroupSearchSetting {
    groupAttribute: string;
    groupBaseDn: string;
    groupFilter: string;
}

export interface SettingsLdapSettingsSearchSetting {
    baseDn: string;
    filter: string;
    userNameAttribute: string;
}

export interface SettingsLdapSettingsTlsConfig {
    tls: boolean;
    tlsCaCert: string;
    tlsCert: string;
    tlsKey: string;
    tlsSkipVerify: boolean;
}

export interface SettingsOauthSettings {
    accessTokenUri: string;
    authStyle: number;
    authorizationUri: string;
    clientId: string;
    clientSecret: string;
    defaultTeamId: number;
    kubeSecretKeys: number[];
    logoutUri: string;
    oauthAutoCreateUsers: boolean;
    redirectUri: string;
    resourceUri: string;
    scopes: string;
    sso: boolean;
    userIdentifier: string;
}

export interface StackEnv {
    name: string;
    value: string;
}

