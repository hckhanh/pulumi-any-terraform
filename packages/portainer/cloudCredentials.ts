// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class CloudCredentials extends pulumi.CustomResource {
    /**
     * Get an existing CloudCredentials resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudCredentialsState, opts?: pulumi.CustomResourceOptions): CloudCredentials {
        return new CloudCredentials(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'portainer:index/cloudCredentials:CloudCredentials';

    /**
     * Returns true if the given object is an instance of CloudCredentials.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudCredentials {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudCredentials.__pulumiType;
    }

    declare public readonly cloudCredentialsId: pulumi.Output<string>;
    /**
     * Cloud provider name (e.g., aws, gcp, digitalocean)
     */
    declare public readonly cloudProvider: pulumi.Output<string>;
    /**
     * JSON-encoded credentials for the provider
     */
    declare public readonly credentials: pulumi.Output<{[key: string]: string}>;
    /**
     * Human-readable name of the credentials
     */
    declare public readonly name: pulumi.Output<string>;

    /**
     * Create a CloudCredentials resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudCredentialsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudCredentialsArgs | CloudCredentialsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudCredentialsState | undefined;
            resourceInputs["cloudCredentialsId"] = state?.cloudCredentialsId;
            resourceInputs["cloudProvider"] = state?.cloudProvider;
            resourceInputs["credentials"] = state?.credentials;
            resourceInputs["name"] = state?.name;
        } else {
            const args = argsOrState as CloudCredentialsArgs | undefined;
            if (args?.cloudProvider === undefined && !opts.urn) {
                throw new Error("Missing required property 'cloudProvider'");
            }
            if (args?.credentials === undefined && !opts.urn) {
                throw new Error("Missing required property 'credentials'");
            }
            resourceInputs["cloudCredentialsId"] = args?.cloudCredentialsId;
            resourceInputs["cloudProvider"] = args?.cloudProvider;
            resourceInputs["credentials"] = args?.credentials;
            resourceInputs["name"] = args?.name;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CloudCredentials.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CloudCredentials resources.
 */
export interface CloudCredentialsState {
    cloudCredentialsId?: pulumi.Input<string>;
    /**
     * Cloud provider name (e.g., aws, gcp, digitalocean)
     */
    cloudProvider?: pulumi.Input<string>;
    /**
     * JSON-encoded credentials for the provider
     */
    credentials?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Human-readable name of the credentials
     */
    name?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CloudCredentials resource.
 */
export interface CloudCredentialsArgs {
    cloudCredentialsId?: pulumi.Input<string>;
    /**
     * Cloud provider name (e.g., aws, gcp, digitalocean)
     */
    cloudProvider: pulumi.Input<string>;
    /**
     * JSON-encoded credentials for the provider
     */
    credentials: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Human-readable name of the credentials
     */
    name?: pulumi.Input<string>;
}
