// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class PullzoneAccessList extends pulumi.CustomResource {
    /**
     * Get an existing PullzoneAccessList resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PullzoneAccessListState, opts?: pulumi.CustomResourceOptions): PullzoneAccessList {
        return new PullzoneAccessList(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'bunnynet:index/pullzoneAccessList:PullzoneAccessList';

    /**
     * Returns true if the given object is an instance of PullzoneAccessList.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PullzoneAccessList {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PullzoneAccessList.__pulumiType;
    }

    /**
     * Options: `Allow`, `Block`, `Challenge`, `Log`
     */
    public readonly action!: pulumi.Output<string>;
    /**
     * Indicated whether the Access List is enabled.
     */
    public readonly enabled!: pulumi.Output<boolean>;
    /**
     * The Access List entries.
     */
    public readonly entries!: pulumi.Output<string[]>;
    /**
     * The Access List name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The ID of the linked pullzone.
     */
    public readonly pullzone!: pulumi.Output<number>;
    /**
     * The ID of the Access List.
     */
    public /*out*/ readonly pullzoneAccessListId!: pulumi.Output<number>;
    /**
     * Options: `ASN`, `CIDR`, `Country`, `IP`
     */
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a PullzoneAccessList resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PullzoneAccessListArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PullzoneAccessListArgs | PullzoneAccessListState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PullzoneAccessListState | undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["entries"] = state ? state.entries : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["pullzone"] = state ? state.pullzone : undefined;
            resourceInputs["pullzoneAccessListId"] = state ? state.pullzoneAccessListId : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as PullzoneAccessListArgs | undefined;
            if ((!args || args.action === undefined) && !opts.urn) {
                throw new Error("Missing required property 'action'");
            }
            if ((!args || args.entries === undefined) && !opts.urn) {
                throw new Error("Missing required property 'entries'");
            }
            if ((!args || args.pullzone === undefined) && !opts.urn) {
                throw new Error("Missing required property 'pullzone'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["entries"] = args ? args.entries : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["pullzone"] = args ? args.pullzone : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["pullzoneAccessListId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PullzoneAccessList.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PullzoneAccessList resources.
 */
export interface PullzoneAccessListState {
    /**
     * Options: `Allow`, `Block`, `Challenge`, `Log`
     */
    action?: pulumi.Input<string>;
    /**
     * Indicated whether the Access List is enabled.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The Access List entries.
     */
    entries?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Access List name.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the linked pullzone.
     */
    pullzone?: pulumi.Input<number>;
    /**
     * The ID of the Access List.
     */
    pullzoneAccessListId?: pulumi.Input<number>;
    /**
     * Options: `ASN`, `CIDR`, `Country`, `IP`
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PullzoneAccessList resource.
 */
export interface PullzoneAccessListArgs {
    /**
     * Options: `Allow`, `Block`, `Challenge`, `Log`
     */
    action: pulumi.Input<string>;
    /**
     * Indicated whether the Access List is enabled.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The Access List entries.
     */
    entries: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Access List name.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the linked pullzone.
     */
    pullzone: pulumi.Input<number>;
    /**
     * Options: `ASN`, `CIDR`, `Country`, `IP`
     */
    type: pulumi.Input<string>;
}
