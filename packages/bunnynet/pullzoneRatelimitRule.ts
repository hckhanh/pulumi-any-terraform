// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class PullzoneRatelimitRule extends pulumi.CustomResource {
    /**
     * Get an existing PullzoneRatelimitRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PullzoneRatelimitRuleState, opts?: pulumi.CustomResourceOptions): PullzoneRatelimitRule {
        return new PullzoneRatelimitRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'bunnynet:index/pullzoneRatelimitRule:PullzoneRatelimitRule';

    /**
     * Returns true if the given object is an instance of PullzoneRatelimitRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PullzoneRatelimitRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PullzoneRatelimitRule.__pulumiType;
    }

    /**
     * The condition to trigger the rate limit rule.
     */
    public readonly condition!: pulumi.Output<outputs.PullzoneRatelimitRuleCondition | undefined>;
    /**
     * The rate limit rule description.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly limit!: pulumi.Output<outputs.PullzoneRatelimitRuleLimit | undefined>;
    /**
     * The rate limit rule name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The ID of the linked pullzone.
     */
    public readonly pullzone!: pulumi.Output<number>;
    /**
     * The ID of the rate limit rule.
     */
    public /*out*/ readonly pullzoneRatelimitRuleId!: pulumi.Output<number>;
    /**
     * The response once the rate limit rule is triggered.
     */
    public readonly response!: pulumi.Output<outputs.PullzoneRatelimitRuleResponse | undefined>;

    /**
     * Create a PullzoneRatelimitRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PullzoneRatelimitRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PullzoneRatelimitRuleArgs | PullzoneRatelimitRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PullzoneRatelimitRuleState | undefined;
            resourceInputs["condition"] = state ? state.condition : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["limit"] = state ? state.limit : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["pullzone"] = state ? state.pullzone : undefined;
            resourceInputs["pullzoneRatelimitRuleId"] = state ? state.pullzoneRatelimitRuleId : undefined;
            resourceInputs["response"] = state ? state.response : undefined;
        } else {
            const args = argsOrState as PullzoneRatelimitRuleArgs | undefined;
            if ((!args || args.pullzone === undefined) && !opts.urn) {
                throw new Error("Missing required property 'pullzone'");
            }
            resourceInputs["condition"] = args ? args.condition : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["limit"] = args ? args.limit : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["pullzone"] = args ? args.pullzone : undefined;
            resourceInputs["response"] = args ? args.response : undefined;
            resourceInputs["pullzoneRatelimitRuleId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PullzoneRatelimitRule.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PullzoneRatelimitRule resources.
 */
export interface PullzoneRatelimitRuleState {
    /**
     * The condition to trigger the rate limit rule.
     */
    condition?: pulumi.Input<inputs.PullzoneRatelimitRuleCondition>;
    /**
     * The rate limit rule description.
     */
    description?: pulumi.Input<string>;
    limit?: pulumi.Input<inputs.PullzoneRatelimitRuleLimit>;
    /**
     * The rate limit rule name.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the linked pullzone.
     */
    pullzone?: pulumi.Input<number>;
    /**
     * The ID of the rate limit rule.
     */
    pullzoneRatelimitRuleId?: pulumi.Input<number>;
    /**
     * The response once the rate limit rule is triggered.
     */
    response?: pulumi.Input<inputs.PullzoneRatelimitRuleResponse>;
}

/**
 * The set of arguments for constructing a PullzoneRatelimitRule resource.
 */
export interface PullzoneRatelimitRuleArgs {
    /**
     * The condition to trigger the rate limit rule.
     */
    condition?: pulumi.Input<inputs.PullzoneRatelimitRuleCondition>;
    /**
     * The rate limit rule description.
     */
    description?: pulumi.Input<string>;
    limit?: pulumi.Input<inputs.PullzoneRatelimitRuleLimit>;
    /**
     * The rate limit rule name.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the linked pullzone.
     */
    pullzone: pulumi.Input<number>;
    /**
     * The response once the rate limit rule is triggered.
     */
    response?: pulumi.Input<inputs.PullzoneRatelimitRuleResponse>;
}
