// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class PullzoneEdgerule extends pulumi.CustomResource {
    /**
     * Get an existing PullzoneEdgerule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PullzoneEdgeruleState, opts?: pulumi.CustomResourceOptions): PullzoneEdgerule {
        return new PullzoneEdgerule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'bunnynet:index/pullzoneEdgerule:PullzoneEdgerule';

    /**
     * Returns true if the given object is an instance of PullzoneEdgerule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PullzoneEdgerule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PullzoneEdgerule.__pulumiType;
    }

    /**
     * Options: `BlockRequest`, `BypassAwsS3Authentication`, `BypassPermaCache`, `DisableOptimizer`, `DisableShield`, `DisableShieldBotDetection`, `DisableShieldChallenge`, `DisableTokenAuthentication`, `DisableWAF`, `EnableTokenAuthentication`, `ForceCompression`, `ForceDownload`, `ForceSSL`, `IgnoreQueryString`, `OriginMagicContainers`, `OriginStorage`, `OriginUrl`, `OverrideBrowserCacheResponseHeader`, `OverrideBrowserCacheTime`, `OverrideCacheTime`, `OverrideCacheTimePublic`, `Redirect`, `RemoveBrowserCacheResponseHeader`, `RetryOrigin`, `RunEdgeScript`, `SetConnectionLimit`, `SetNetworkRateLimit`, `SetRequestHeader`, `SetRequestsPerSecondLimit`, `SetResponseHeader`, `SetStatusCode`
     */
    declare public readonly action: pulumi.Output<string | undefined>;
    declare public readonly actionParameter1: pulumi.Output<string | undefined>;
    declare public readonly actionParameter2: pulumi.Output<string | undefined>;
    declare public readonly actionParameter3: pulumi.Output<string | undefined>;
    /**
     * List of actions for the edge rule.
     */
    declare public readonly actions: pulumi.Output<outputs.PullzoneEdgeruleAction[]>;
    /**
     * The description of the edge rule.
     */
    declare public readonly description: pulumi.Output<string>;
    /**
     * Indicates whether the edge rule is enabled.
     */
    declare public readonly enabled: pulumi.Output<boolean>;
    /**
     * Options: `MatchAll`, `MatchAny`, `MatchNone`
     */
    declare public readonly matchType: pulumi.Output<string>;
    /**
     * The priority of the edge rule. The lower number is executed first.
     */
    declare public readonly priority: pulumi.Output<number>;
    declare public readonly pullzone: pulumi.Output<number>;
    declare public readonly triggers: pulumi.Output<outputs.PullzoneEdgeruleTrigger[]>;

    /**
     * Create a PullzoneEdgerule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PullzoneEdgeruleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PullzoneEdgeruleArgs | PullzoneEdgeruleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PullzoneEdgeruleState | undefined;
            resourceInputs["action"] = state?.action;
            resourceInputs["actionParameter1"] = state?.actionParameter1;
            resourceInputs["actionParameter2"] = state?.actionParameter2;
            resourceInputs["actionParameter3"] = state?.actionParameter3;
            resourceInputs["actions"] = state?.actions;
            resourceInputs["description"] = state?.description;
            resourceInputs["enabled"] = state?.enabled;
            resourceInputs["matchType"] = state?.matchType;
            resourceInputs["priority"] = state?.priority;
            resourceInputs["pullzone"] = state?.pullzone;
            resourceInputs["triggers"] = state?.triggers;
        } else {
            const args = argsOrState as PullzoneEdgeruleArgs | undefined;
            if (args?.enabled === undefined && !opts.urn) {
                throw new Error("Missing required property 'enabled'");
            }
            if (args?.pullzone === undefined && !opts.urn) {
                throw new Error("Missing required property 'pullzone'");
            }
            if (args?.triggers === undefined && !opts.urn) {
                throw new Error("Missing required property 'triggers'");
            }
            resourceInputs["action"] = args?.action;
            resourceInputs["actionParameter1"] = args?.actionParameter1;
            resourceInputs["actionParameter2"] = args?.actionParameter2;
            resourceInputs["actionParameter3"] = args?.actionParameter3;
            resourceInputs["actions"] = args?.actions;
            resourceInputs["description"] = args?.description;
            resourceInputs["enabled"] = args?.enabled;
            resourceInputs["matchType"] = args?.matchType;
            resourceInputs["priority"] = args?.priority;
            resourceInputs["pullzone"] = args?.pullzone;
            resourceInputs["triggers"] = args?.triggers;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PullzoneEdgerule.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PullzoneEdgerule resources.
 */
export interface PullzoneEdgeruleState {
    /**
     * Options: `BlockRequest`, `BypassAwsS3Authentication`, `BypassPermaCache`, `DisableOptimizer`, `DisableShield`, `DisableShieldBotDetection`, `DisableShieldChallenge`, `DisableTokenAuthentication`, `DisableWAF`, `EnableTokenAuthentication`, `ForceCompression`, `ForceDownload`, `ForceSSL`, `IgnoreQueryString`, `OriginMagicContainers`, `OriginStorage`, `OriginUrl`, `OverrideBrowserCacheResponseHeader`, `OverrideBrowserCacheTime`, `OverrideCacheTime`, `OverrideCacheTimePublic`, `Redirect`, `RemoveBrowserCacheResponseHeader`, `RetryOrigin`, `RunEdgeScript`, `SetConnectionLimit`, `SetNetworkRateLimit`, `SetRequestHeader`, `SetRequestsPerSecondLimit`, `SetResponseHeader`, `SetStatusCode`
     */
    action?: pulumi.Input<string>;
    actionParameter1?: pulumi.Input<string>;
    actionParameter2?: pulumi.Input<string>;
    actionParameter3?: pulumi.Input<string>;
    /**
     * List of actions for the edge rule.
     */
    actions?: pulumi.Input<pulumi.Input<inputs.PullzoneEdgeruleAction>[]>;
    /**
     * The description of the edge rule.
     */
    description?: pulumi.Input<string>;
    /**
     * Indicates whether the edge rule is enabled.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Options: `MatchAll`, `MatchAny`, `MatchNone`
     */
    matchType?: pulumi.Input<string>;
    /**
     * The priority of the edge rule. The lower number is executed first.
     */
    priority?: pulumi.Input<number>;
    pullzone?: pulumi.Input<number>;
    triggers?: pulumi.Input<pulumi.Input<inputs.PullzoneEdgeruleTrigger>[]>;
}

/**
 * The set of arguments for constructing a PullzoneEdgerule resource.
 */
export interface PullzoneEdgeruleArgs {
    /**
     * Options: `BlockRequest`, `BypassAwsS3Authentication`, `BypassPermaCache`, `DisableOptimizer`, `DisableShield`, `DisableShieldBotDetection`, `DisableShieldChallenge`, `DisableTokenAuthentication`, `DisableWAF`, `EnableTokenAuthentication`, `ForceCompression`, `ForceDownload`, `ForceSSL`, `IgnoreQueryString`, `OriginMagicContainers`, `OriginStorage`, `OriginUrl`, `OverrideBrowserCacheResponseHeader`, `OverrideBrowserCacheTime`, `OverrideCacheTime`, `OverrideCacheTimePublic`, `Redirect`, `RemoveBrowserCacheResponseHeader`, `RetryOrigin`, `RunEdgeScript`, `SetConnectionLimit`, `SetNetworkRateLimit`, `SetRequestHeader`, `SetRequestsPerSecondLimit`, `SetResponseHeader`, `SetStatusCode`
     */
    action?: pulumi.Input<string>;
    actionParameter1?: pulumi.Input<string>;
    actionParameter2?: pulumi.Input<string>;
    actionParameter3?: pulumi.Input<string>;
    /**
     * List of actions for the edge rule.
     */
    actions?: pulumi.Input<pulumi.Input<inputs.PullzoneEdgeruleAction>[]>;
    /**
     * The description of the edge rule.
     */
    description?: pulumi.Input<string>;
    /**
     * Indicates whether the edge rule is enabled.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Options: `MatchAll`, `MatchAny`, `MatchNone`
     */
    matchType?: pulumi.Input<string>;
    /**
     * The priority of the edge rule. The lower number is executed first.
     */
    priority?: pulumi.Input<number>;
    pullzone: pulumi.Input<number>;
    triggers: pulumi.Input<pulumi.Input<inputs.PullzoneEdgeruleTrigger>[]>;
}
