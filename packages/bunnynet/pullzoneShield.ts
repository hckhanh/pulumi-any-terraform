// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class PullzoneShield extends pulumi.CustomResource {
    /**
     * Get an existing PullzoneShield resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PullzoneShieldState, opts?: pulumi.CustomResourceOptions): PullzoneShield {
        return new PullzoneShield(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'bunnynet:index/pullzoneShield:PullzoneShield';

    /**
     * Returns true if the given object is an instance of PullzoneShield.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PullzoneShield {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PullzoneShield.__pulumiType;
    }

    declare public readonly accessLists: pulumi.Output<outputs.PullzoneShieldAccessList[] | undefined>;
    /**
     * Configures Bot Detection settings.
     */
    declare public readonly botDetection: pulumi.Output<outputs.PullzoneShieldBotDetection | undefined>;
    /**
     * Configures DDoS settings.
     */
    declare public readonly ddos: pulumi.Output<outputs.PullzoneShieldDdos | undefined>;
    /**
     * The ID of the linked pullzone.
     */
    declare public readonly pullzone: pulumi.Output<number>;
    /**
     * The ID of the Bunny Shield.
     */
    declare public /*out*/ readonly pullzoneShieldId: pulumi.Output<number>;
    /**
     * Options: `Advanced`, `Basic`, `Business`, `Enterprise`
     */
    declare public readonly tier: pulumi.Output<string>;
    /**
     * Configures WAF settings.
     */
    declare public readonly waf: pulumi.Output<outputs.PullzoneShieldWaf | undefined>;
    /**
     * Replace our bunny.net branded block and challenge pages with a white-labelled experience.
     */
    declare public readonly whitelabel: pulumi.Output<boolean>;

    /**
     * Create a PullzoneShield resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PullzoneShieldArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PullzoneShieldArgs | PullzoneShieldState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PullzoneShieldState | undefined;
            resourceInputs["accessLists"] = state?.accessLists;
            resourceInputs["botDetection"] = state?.botDetection;
            resourceInputs["ddos"] = state?.ddos;
            resourceInputs["pullzone"] = state?.pullzone;
            resourceInputs["pullzoneShieldId"] = state?.pullzoneShieldId;
            resourceInputs["tier"] = state?.tier;
            resourceInputs["waf"] = state?.waf;
            resourceInputs["whitelabel"] = state?.whitelabel;
        } else {
            const args = argsOrState as PullzoneShieldArgs | undefined;
            if (args?.pullzone === undefined && !opts.urn) {
                throw new Error("Missing required property 'pullzone'");
            }
            resourceInputs["accessLists"] = args?.accessLists;
            resourceInputs["botDetection"] = args?.botDetection;
            resourceInputs["ddos"] = args?.ddos;
            resourceInputs["pullzone"] = args?.pullzone;
            resourceInputs["tier"] = args?.tier;
            resourceInputs["waf"] = args?.waf;
            resourceInputs["whitelabel"] = args?.whitelabel;
            resourceInputs["pullzoneShieldId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PullzoneShield.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PullzoneShield resources.
 */
export interface PullzoneShieldState {
    accessLists?: pulumi.Input<pulumi.Input<inputs.PullzoneShieldAccessList>[]>;
    /**
     * Configures Bot Detection settings.
     */
    botDetection?: pulumi.Input<inputs.PullzoneShieldBotDetection>;
    /**
     * Configures DDoS settings.
     */
    ddos?: pulumi.Input<inputs.PullzoneShieldDdos>;
    /**
     * The ID of the linked pullzone.
     */
    pullzone?: pulumi.Input<number>;
    /**
     * The ID of the Bunny Shield.
     */
    pullzoneShieldId?: pulumi.Input<number>;
    /**
     * Options: `Advanced`, `Basic`, `Business`, `Enterprise`
     */
    tier?: pulumi.Input<string>;
    /**
     * Configures WAF settings.
     */
    waf?: pulumi.Input<inputs.PullzoneShieldWaf>;
    /**
     * Replace our bunny.net branded block and challenge pages with a white-labelled experience.
     */
    whitelabel?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a PullzoneShield resource.
 */
export interface PullzoneShieldArgs {
    accessLists?: pulumi.Input<pulumi.Input<inputs.PullzoneShieldAccessList>[]>;
    /**
     * Configures Bot Detection settings.
     */
    botDetection?: pulumi.Input<inputs.PullzoneShieldBotDetection>;
    /**
     * Configures DDoS settings.
     */
    ddos?: pulumi.Input<inputs.PullzoneShieldDdos>;
    /**
     * The ID of the linked pullzone.
     */
    pullzone: pulumi.Input<number>;
    /**
     * Options: `Advanced`, `Basic`, `Business`, `Enterprise`
     */
    tier?: pulumi.Input<string>;
    /**
     * Configures WAF settings.
     */
    waf?: pulumi.Input<inputs.PullzoneShieldWaf>;
    /**
     * Replace our bunny.net branded block and challenge pages with a white-labelled experience.
     */
    whitelabel?: pulumi.Input<boolean>;
}
