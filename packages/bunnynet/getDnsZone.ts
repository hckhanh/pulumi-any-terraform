// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDnsZone(args: GetDnsZoneArgs, opts?: pulumi.InvokeOptions): Promise<GetDnsZoneResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("bunnynet:index/getDnsZone:getDnsZone", {
        "domain": args.domain,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDnsZone.
 */
export interface GetDnsZoneArgs {
    domain: string;
}

/**
 * A collection of values returned by getDnsZone.
 */
export interface GetDnsZoneResult {
    readonly domain: string;
    readonly id: number;
    readonly logAnonymized: boolean;
    readonly logAnonymizedStyle: string;
    readonly logEnabled: boolean;
    readonly nameserver1: string;
    readonly nameserver2: string;
    readonly nameserverCustom: boolean;
    readonly soaEmail: string;
}
export function getDnsZoneOutput(args: GetDnsZoneOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDnsZoneResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("bunnynet:index/getDnsZone:getDnsZone", {
        "domain": args.domain,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDnsZone.
 */
export interface GetDnsZoneOutputArgs {
    domain: pulumi.Input<string>;
}
