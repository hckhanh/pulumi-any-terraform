// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getVideoLanguage(args: GetVideoLanguageArgs, opts?: pulumi.InvokeOptions): Promise<GetVideoLanguageResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("bunnynet:index/getVideoLanguage:getVideoLanguage", {
        "code": args.code,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVideoLanguage.
 */
export interface GetVideoLanguageArgs {
    code: string;
}

/**
 * A collection of values returned by getVideoLanguage.
 */
export interface GetVideoLanguageResult {
    readonly code: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    readonly supportPlayerTranslation: boolean;
    readonly supportTranscribing: boolean;
    readonly transcribingAccuracy: number;
}
export function getVideoLanguageOutput(args: GetVideoLanguageOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetVideoLanguageResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("bunnynet:index/getVideoLanguage:getVideoLanguage", {
        "code": args.code,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVideoLanguage.
 */
export interface GetVideoLanguageOutputArgs {
    code: pulumi.Input<string>;
}
