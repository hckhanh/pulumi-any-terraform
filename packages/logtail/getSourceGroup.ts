// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSourceGroup(args: GetSourceGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetSourceGroupResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("logtail:index/getSourceGroup:getSourceGroup", {
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSourceGroup.
 */
export interface GetSourceGroupArgs {
    name: string;
}

/**
 * A collection of values returned by getSourceGroup.
 */
export interface GetSourceGroupResult {
    readonly createdAt: string;
    readonly id: string;
    readonly name: string;
    readonly sortIndex: number;
    readonly teamName: string;
    readonly updatedAt: string;
}
export function getSourceGroupOutput(args: GetSourceGroupOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSourceGroupResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("logtail:index/getSourceGroup:getSourceGroup", {
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSourceGroup.
 */
export interface GetSourceGroupOutputArgs {
    name: pulumi.Input<string>;
}
