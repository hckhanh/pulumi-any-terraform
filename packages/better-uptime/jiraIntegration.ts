// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class JiraIntegration extends pulumi.CustomResource {
    /**
     * Get an existing JiraIntegration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: JiraIntegrationState, opts?: pulumi.CustomResourceOptions): JiraIntegration {
        return new JiraIntegration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'better-uptime:index/jiraIntegration:JiraIntegration';

    /**
     * Returns true if the given object is an instance of JiraIntegration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is JiraIntegration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === JiraIntegration.__pulumiType;
    }

    /**
     * Whether to automatically create issues in Jira on incident start.
     */
    declare public readonly automaticIssueCreation: pulumi.Output<boolean>;
    /**
     * Due to required authentication in Jira, the integration has to be created and removed in Better Stack web UI. You can set the ID of the Jira Integration to control in Better Stack, and it will be auto-imported during resource creation.
     */
    declare public readonly betterStackId: pulumi.Output<string | undefined>;
    /**
     * JSON object representing Jira fields.
     */
    declare public readonly jiraFieldsJson: pulumi.Output<string>;
    /**
     * The Jira issue type ID.
     */
    declare public readonly jiraIssueTypeId: pulumi.Output<string>;
    /**
     * The Jira project key.
     */
    declare public readonly jiraProjectKey: pulumi.Output<string>;
    /**
     * The name of the Jira Integration.
     */
    declare public readonly name: pulumi.Output<string>;

    /**
     * Create a JiraIntegration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: JiraIntegrationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: JiraIntegrationArgs | JiraIntegrationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as JiraIntegrationState | undefined;
            resourceInputs["automaticIssueCreation"] = state?.automaticIssueCreation;
            resourceInputs["betterStackId"] = state?.betterStackId;
            resourceInputs["jiraFieldsJson"] = state?.jiraFieldsJson;
            resourceInputs["jiraIssueTypeId"] = state?.jiraIssueTypeId;
            resourceInputs["jiraProjectKey"] = state?.jiraProjectKey;
            resourceInputs["name"] = state?.name;
        } else {
            const args = argsOrState as JiraIntegrationArgs | undefined;
            resourceInputs["automaticIssueCreation"] = args?.automaticIssueCreation;
            resourceInputs["betterStackId"] = args?.betterStackId;
            resourceInputs["jiraFieldsJson"] = args?.jiraFieldsJson;
            resourceInputs["jiraIssueTypeId"] = args?.jiraIssueTypeId;
            resourceInputs["jiraProjectKey"] = args?.jiraProjectKey;
            resourceInputs["name"] = args?.name;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(JiraIntegration.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering JiraIntegration resources.
 */
export interface JiraIntegrationState {
    /**
     * Whether to automatically create issues in Jira on incident start.
     */
    automaticIssueCreation?: pulumi.Input<boolean>;
    /**
     * Due to required authentication in Jira, the integration has to be created and removed in Better Stack web UI. You can set the ID of the Jira Integration to control in Better Stack, and it will be auto-imported during resource creation.
     */
    betterStackId?: pulumi.Input<string>;
    /**
     * JSON object representing Jira fields.
     */
    jiraFieldsJson?: pulumi.Input<string>;
    /**
     * The Jira issue type ID.
     */
    jiraIssueTypeId?: pulumi.Input<string>;
    /**
     * The Jira project key.
     */
    jiraProjectKey?: pulumi.Input<string>;
    /**
     * The name of the Jira Integration.
     */
    name?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a JiraIntegration resource.
 */
export interface JiraIntegrationArgs {
    /**
     * Whether to automatically create issues in Jira on incident start.
     */
    automaticIssueCreation?: pulumi.Input<boolean>;
    /**
     * Due to required authentication in Jira, the integration has to be created and removed in Better Stack web UI. You can set the ID of the Jira Integration to control in Better Stack, and it will be auto-imported during resource creation.
     */
    betterStackId?: pulumi.Input<string>;
    /**
     * JSON object representing Jira fields.
     */
    jiraFieldsJson?: pulumi.Input<string>;
    /**
     * The Jira issue type ID.
     */
    jiraIssueTypeId?: pulumi.Input<string>;
    /**
     * The Jira project key.
     */
    jiraProjectKey?: pulumi.Input<string>;
    /**
     * The name of the Jira Integration.
     */
    name?: pulumi.Input<string>;
}
