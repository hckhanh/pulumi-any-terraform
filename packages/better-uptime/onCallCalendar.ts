// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class OnCallCalendar extends pulumi.CustomResource {
    /**
     * Get an existing OnCallCalendar resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OnCallCalendarState, opts?: pulumi.CustomResourceOptions): OnCallCalendar {
        return new OnCallCalendar(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'better-uptime:index/onCallCalendar:OnCallCalendar';

    /**
     * Returns true if the given object is an instance of OnCallCalendar.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OnCallCalendar {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OnCallCalendar.__pulumiType;
    }

    /**
     * Whether the on-call calendar is the default on-call calendar.
     */
    declare public /*out*/ readonly defaultCalendar: pulumi.Output<boolean>;
    /**
     * Name of the on-call calendar.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Configuration block for the on-call rotation schedule. Ignored when omitted - on-call can be controlled in Better Stack.
     */
    declare public readonly onCallRotation: pulumi.Output<outputs.OnCallCalendarOnCallRotation | undefined>;
    /**
     * Array of on-call persons.
     */
    declare public /*out*/ readonly onCallUsers: pulumi.Output<outputs.OnCallCalendarOnCallUser[]>;
    /**
     * Used to specify the team the resource should be created in when using global tokens.
     */
    declare public readonly teamName: pulumi.Output<string | undefined>;

    /**
     * Create a OnCallCalendar resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: OnCallCalendarArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OnCallCalendarArgs | OnCallCalendarState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OnCallCalendarState | undefined;
            resourceInputs["defaultCalendar"] = state?.defaultCalendar;
            resourceInputs["name"] = state?.name;
            resourceInputs["onCallRotation"] = state?.onCallRotation;
            resourceInputs["onCallUsers"] = state?.onCallUsers;
            resourceInputs["teamName"] = state?.teamName;
        } else {
            const args = argsOrState as OnCallCalendarArgs | undefined;
            resourceInputs["name"] = args?.name;
            resourceInputs["onCallRotation"] = args?.onCallRotation;
            resourceInputs["teamName"] = args?.teamName;
            resourceInputs["defaultCalendar"] = undefined /*out*/;
            resourceInputs["onCallUsers"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OnCallCalendar.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering OnCallCalendar resources.
 */
export interface OnCallCalendarState {
    /**
     * Whether the on-call calendar is the default on-call calendar.
     */
    defaultCalendar?: pulumi.Input<boolean>;
    /**
     * Name of the on-call calendar.
     */
    name?: pulumi.Input<string>;
    /**
     * Configuration block for the on-call rotation schedule. Ignored when omitted - on-call can be controlled in Better Stack.
     */
    onCallRotation?: pulumi.Input<inputs.OnCallCalendarOnCallRotation>;
    /**
     * Array of on-call persons.
     */
    onCallUsers?: pulumi.Input<pulumi.Input<inputs.OnCallCalendarOnCallUser>[]>;
    /**
     * Used to specify the team the resource should be created in when using global tokens.
     */
    teamName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OnCallCalendar resource.
 */
export interface OnCallCalendarArgs {
    /**
     * Name of the on-call calendar.
     */
    name?: pulumi.Input<string>;
    /**
     * Configuration block for the on-call rotation schedule. Ignored when omitted - on-call can be controlled in Better Stack.
     */
    onCallRotation?: pulumi.Input<inputs.OnCallCalendarOnCallRotation>;
    /**
     * Used to specify the team the resource should be created in when using global tokens.
     */
    teamName?: pulumi.Input<string>;
}
